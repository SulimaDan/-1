<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="UTF-8">
    <meta name="viewport" conter="widht=divice-widht, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <div>
        <blockquote>
            <h1>Romei <em>and</em> Juliet</h1>
        </blockquote>

    <div>
    <h1>Act 1</h1>
    <h1>Prologue</h1>
    <h4>Two households, both alike in dignity, In fair Verona, where we lay our scene, From ancient grudge break
     to new mutiny, Where civil blood makes civil hands unclean. From forth the fatal loins of these two foes A 
     pair of star-cross'd lovers take their life; Whose misadventured piteous overthrows Do with their death bury
      their parents' strife. The fearful passage of their death-mark'd love, And the continuance of their parents'
       rage, Which, but their children's end, nought could remove, Is now the two hours' traffic of our stage; The
        which if you with patient ears attend, What here shall miss, our toil shall strive to mend.</h4>
    <h1>SCENE I. Verona. A public place.</h1>
    <h4>Enter SAMPSON and GREGORY, of the house of Capulet, armed with swords and bucklers</h4>
    <h1>SAMPSON</h1>
    <h4>Gregory, o' my word, we'll not carry coals.</h4>
    <h1>GREGORY</h1>
    <h4>No, for then we should be colliers.</h4>
    <hr>
    
    <h4>Player 1</h4>
    <h1>1♠</h1> <h1>5♣</h1> <h1>9♥</h1>  <h1>Q♦</h1> <h1>J♥</h1>
    <h4>Player 2</h4>
    <h1>3♠</h1> <h1>1♣</h1> <h1>6♥</h1>  <h1>A♦</h1> <h1>K♥</h1>
    <hr>
    <h1>HTML Tutorial</h1>
    <hr>
    <blockquote>
        <h1>What <em>is</em> Html</h1>
    </blockquote>
    <h4>Hypertext Markup Language (HTML) is the standard markup language for creating web pages and web applications.</h4>
    <h4>Web browsers receive HTML documents from a web server or from 
local storage and render the documents into multimedia
     web pages. HTML describes the structure of a web page semantically 
and originally included cues for the appearance of the document.</h4>
    <h4>HTML elements are the building blocks of HTML pages. With HTML 
constructs, images and other
    objects such as interactive forms may be embedded into the rendered 
page. HTML provides
    a means to create structured documents by denoting structural 
semantics for text such
    as headings, paragraphs, lists, links, quotes and other items. HTML 
elements are
    delineated by tags, written using angle brackets. Tags such as 
&lt;img /&gt; and &lt;input /&gt; directly introduce content into the 
page. Other 
    tags such as &lt;p&gt; surround and provide information about 
document text and may include other tags as sub-elements. Browsers do 
not
     display the HTML tags, but use them to interpret the content of the
 page.
    </h4>
    <hr>
    <blockquote>
        <h1>Markup</h1>
    </blockquote>
    <h4>HTML markup consists of several key components, including those 
called tags (and their attributes), character-based data types,
         character references and entity references. HTML tags most 
commonly come in pairs like &lt;h1&gt; and &lt;/h1&gt;, although some 
represent
          empty elements and so are unpaired, for example &lt;img&gt;. 
The first tag in such a pair is the start tag, and the second is the 
          end tag (they are also called opening tags and closing tags).

        Another important component is the HTML, document type 
declaration, which triggers standards mode rendering.
        
        The following is an example of the classic "Hello, World!" 
program:
    </h4>
    
    <p>&lt;!DOCTYPE html&gt;

        &lt;html&gt;
        
        &lt;head&gt;
        
        &lt;title&gt;This is a title&lt;/title&gt;
        
        &lt;/head&gt;
        
        &lt;body&gt;
        
        p&gt;Hello world!&lt; /p&gt;
        
        &lt;/body &gt;
        
        &lt;/html&gt; </p>



<h3>Tags: CodingScripting head HTML Introduction to HTML Landing Links semantics Structure Text</h3>




<script>

	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}

</script>





</div></div></body></html>